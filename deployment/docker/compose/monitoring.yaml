services:

  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    restart: unless-stopped
    user: "1000:1000"
    ports:
      - "${NODE_EXPORTER_PORT:-9100}:9100"
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9100/-/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    ports:
      - "${CADVISOR_PORT:-9110}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/-/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
  
  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus
    restart: unless-stopped
    depends_on:
      - node-exporter
      - cadvisor
    user: "nobody"  # Run as non-root user
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ../../../configs/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=5GB'
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    user: "nobody"  # Run as non-root user
    ports:
      - "${GRAFANA_PORT:-9120}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../../configs/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../../../configs/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s